<?php

/**
 * BaseAipStatusLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $aip_id
 * @property integer $aip_status_id
 * @property timestamp $opened_at
 * @property timestamp $closed_at
 * @property Aip $Aip
 * @property AipStatus $AipStatus
 * 
 * @method integer      getAipId()         Returns the current record's "aip_id" value
 * @method integer      getAipStatusId()   Returns the current record's "aip_status_id" value
 * @method timestamp    getOpenedAt()      Returns the current record's "opened_at" value
 * @method timestamp    getClosedAt()      Returns the current record's "closed_at" value
 * @method Aip          getAip()           Returns the current record's "Aip" value
 * @method AipStatus    getAipStatus()     Returns the current record's "AipStatus" value
 * @method AipStatusLog setAipId()         Sets the current record's "aip_id" value
 * @method AipStatusLog setAipStatusId()   Sets the current record's "aip_status_id" value
 * @method AipStatusLog setOpenedAt()      Sets the current record's "opened_at" value
 * @method AipStatusLog setClosedAt()      Sets the current record's "closed_at" value
 * @method AipStatusLog setAip()           Sets the current record's "Aip" value
 * @method AipStatusLog setAipStatus()     Sets the current record's "AipStatus" value
 * 
 * @package    dashboard
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: BaseAipStatusLog.class.php 160 2010-02-25 00:53:31Z peter $
 */
abstract class BaseAipStatusLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('aip_status_log');
        $this->hasColumn('aip_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('aip_status_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('opened_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => '25',
             ));
        $this->hasColumn('closed_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Aip', array(
             'local' => 'aip_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('AipStatus', array(
             'local' => 'aip_status_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}