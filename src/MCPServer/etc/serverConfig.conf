#!/bin/bash

# This file is part of Archivematica.
#
# Copyright 2010-2011 Artefactual Systems Inc. <http://artefactual.com>
#
# Archivematica is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# Archivematica is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Archivematica.  If not, see <http://www.gnu.org/licenses/>.


# @package Archivematica
# @subpackage MCPServer
# @author Joseph Perry <joseph@artefactual.com>
# @version svn: $Id$

[MCPServer]
DublinCore  =  dublincore.xml
checksumsNoExtention  =  checksum
fileUUIDSHumanReadable  =  FileUUIDs.log
moduleConfigDir  =  /etc/archivematica/MCPServer/mcpModulesConfig
#to listen on localhost only, uncomment the following line
#MCPArchivematicaServerInterface  =  localhost  
MCPArchivematicaServerPort  =  8002
archivematicaProtocol  =  /etc/archivematica/MCPServer/archivematicaProtocol
watchDirectoryPath  =  /var/archivematica/sharedDirectory/watchedDirectories/
sharedDirectory  =  /var/archivematica/sharedDirectory/
processingDirectory  =  /var/archivematica/sharedDirectory/currentlyProcessing/
AIPsStore  =  /var/archivematica/sharedDirectory/AIPsStore/
MCPArchivematicaXMLClients  =  localhost
MCPArchivematicaXMLPort  =  8000
MCPWaitForCopyToCompleteSeconds  =  5
actOnCopied  =  true

[Protocol]
#seperates Values when transported from client to server
delimiter = <!&\delimiter/&!>
#seconds to pause between sending Keep alives
keepAlivePause = 600
maxLen = 1000000

#--TO CLIENT--
#To load server configs into the client  --NOT USED/NEEDED (everything can happen on server side)
addToServerConf = addToServerConf
#to tell the client to perform a task
performTask = performTask
#keeps idle connection open 
keepAlive = keepAlive

#--TO SERVER--
#inform the server the client is capable of running a certain type of task
addToListTaskHandler = addToListTaskHandler
#inform the server a task is completed 
taskCompleted = taskCompleted
#tell the server how many threads this client will run 
maxTasks = setMaxTasks 
setName = setName
requestLockForWrite = requestLockForWrite





